{"version":3,"sources":["ApisithCard.js","EducationCard.js","ActivitieCard.js","PublicationsCard.js","Footer.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["imgCenter","display","width","ApisithCard","Card","fluid","Reveal","animated","Content","visible","Image","src","size","style","hidden","centered","Header","as","color","Meta","className","Description","extra","href","Icon","name","target","EducationCard","verticalAlign","Feed","Event","Label","image","Date","content","Summary","ActivitieCard","PublicationsCard","Footer","Segment","inverted","vertical","margin","padding","Container","textAlign","Home","Grid","columns","stackable","Column","basic","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbde35a1.chunk.js","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\r\nimport React from \"react\";\r\nimport { Card, Icon, Image, Reveal, Header } from \"semantic-ui-react\";\r\nconst imgCenter = {\r\n  display: \"block\",\r\n  \"margin-left\": \"auto\",\r\n  \"margin-right\": \"auto\",\r\n  width: \"80%\"\r\n};\r\nconst ApisithCard = () => (\r\n  <Card fluid>\r\n    {/* <Image src=\"/images/avatar/me1.jpg\" wrapped ui={false} /> */}\r\n\r\n    <Reveal animated=\"fade\">\r\n      <Reveal.Content visible>\r\n        <Image\r\n          src=\"/images/avatar/me_crop11.jpg\"\r\n          size=\"medium\"\r\n          style={imgCenter}\r\n        />\r\n      </Reveal.Content>\r\n\r\n      <Reveal.Content hidden centered>\r\n        <Image\r\n          src=\"/images/avatar/me_crop2.jpg\"\r\n          size=\"medium\"\r\n          style={imgCenter}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n\r\n    <Card.Content>\r\n      <Card.Header>\r\n        <Header as=\"h2\" color=\"blue\">\r\n          Apisith Wongsorn\r\n        </Header>\r\n      </Card.Header>\r\n      <Card.Meta>\r\n        <span className=\"name\">Om</span>\r\n      </Card.Meta>\r\n      <Card.Description>\r\n        Department of Computer Science, Faculty of Science and Technology,\r\n        Thammasat University (Lampang Campus), Lampang, Thailand 52190\r\n      </Card.Description>\r\n    </Card.Content>\r\n\r\n    <Card.Content extra>\r\n      {/* <Card.Header>Contacts</Card.Header> */}\r\n      {/* <Label as=\"a\">\r\n        <Icon name=\"phone\" />\r\n      </Label> */}\r\n      <a href=\"tel:+66(0)625068131\">\r\n        <Icon size=\"large\" name=\"phone\" />\r\n        +66(0)625068131\r\n      </a>\r\n      <br />\r\n      <a href=\"mailto:apisith.won@dome.tu.ac.th\">\r\n        <Icon size=\"large\" name=\"mail\" />\r\n        apisith.won@dome.tu.ac.th\r\n      </a>\r\n      <br />\r\n    </Card.Content>\r\n\r\n    <Card.Content extra>\r\n      <Header as=\"h4\" color=\"blue\">\r\n        Follow Me\r\n      </Header>\r\n      {/* <Divider /> */}\r\n      <a href=\"https://www.facebook.com/om.apisith/\" target=\"_blank\">\r\n        <Icon size=\"large\" name=\"facebook squarebook\" />\r\n        Apisith Wongsorn\r\n      </a>\r\n\r\n      <br />\r\n      <a href=\"https://www.instagram.com/om_apisith/\" target=\"_blank\">\r\n        <Icon size=\"large\" name=\"instagram\" />\r\n        om_apisith\r\n      </a>\r\n      <br />\r\n      <a href=\"http://line.me/ti/p/apisith.ws3\" target=\"_blank\">\r\n        <Icon size=\"large\" name=\"linechat\" />\r\n        apisith.ws3\r\n      </a>\r\n      <br />\r\n      <a href=\"https://github.com/soycoder\" target=\"_blank\">\r\n        <Icon size=\"large\" name=\"github square\" />\r\n        soycoder\r\n      </a>\r\n      <br />\r\n    </Card.Content>\r\n  </Card>\r\n);\r\n\r\nexport default ApisithCard;\r\n","import React from \"react\";\r\nimport { Card, Feed, Header, Image } from \"semantic-ui-react\";\r\n\r\nconst EducationCard = () => (\r\n  <Card fluid>\r\n    <Card.Content style={{\"padding-top\":\"0px\",\"padding-bottom\": \"0px\"}}>\r\n      <Header as=\"h2\" color=\"blue\">\r\n        <Image\r\n          src=\"/images/icon/educate.png\"\r\n          size=\"massive\"\r\n          verticalAlign=\"middle\"\r\n        />\r\n        Education\r\n      </Header>\r\n    </Card.Content>\r\n    <Card.Content style={{\"padding-left\": \"34px\"}}>\r\n      <Feed>\r\n        <Feed.Event>\r\n          <Feed.Label image=\"/images/school/tu-small.png\" />\r\n          <Feed.Content  >\r\n            <Feed.Date content=\"August 2018 - Present (Expected Graduation : May 2022)\" />\r\n            <Feed.Summary>\r\n              Bachelor of Science and Technology in Computer Science, Thammasat University,\r\n              Thailand.\r\n            </Feed.Summary>\r\n          </Feed.Content>\r\n        </Feed.Event>\r\n\r\n        <Feed.Event>\r\n          <Feed.Label image=\"/images/school/ct-small.png\" />\r\n          <Feed.Content>\r\n            <Feed.Date content=\"May 2012 - March 2018\" />\r\n            <Feed.Summary>\r\n              Gifted Science and Mathematics Program (GSMP), Chomthong School,\r\n              Thailand.\r\n            </Feed.Summary>\r\n          </Feed.Content>\r\n        </Feed.Event>\r\n      </Feed>\r\n    </Card.Content>\r\n  </Card>\r\n);\r\n\r\nexport default EducationCard;\r\n","import React from \"react\";\r\nimport { Card, Header, Image } from \"semantic-ui-react\";\r\n\r\nconst ActivitieCard = () => (\r\n  <Card fluid>\r\n    <Card.Content style={{ \"padding-top\": \"0px\", \"padding-bottom\": \"0px\" }}>\r\n      <Header as=\"h2\" color=\"blue\">\r\n        <Image\r\n          src=\"/images/icon/light.png\"\r\n          size=\"massive\"\r\n          verticalAlign=\"middle\"\r\n        />\r\n        Undergraduate Activities\r\n      </Header>\r\n    </Card.Content>\r\n    <Card.Content>\r\n      <Header as=\"h4\" color=\"blue\">\r\n        Software Contests\r\n      </Header>\r\n      <ul>\r\n        <li>\r\n          Thailand National Software Contest (NSC) 2020. <br />\r\n          <b>English War Platform: Learning English online with gamification</b>\r\n          <br />\r\n          (Passed to the northern region round)\r\n        </li>\r\n\r\n        <li>\r\n          Thailand National Software Contest (NSC) 2019.\r\n          <br />\r\n          <b>Bed control system for physical therapy of paralysis patient</b>\r\n          <br />\r\n          (Passed to the northern region round)\r\n        </li>\r\n      </ul>\r\n      <Header as=\"h4\" color=\"blue\">\r\n        Training\r\n      </Header>\r\n      <ul>\r\n        <li>\r\n          MODDANG: Boot Camp, Real-World Data Science Challenges, Thailand,\r\n          2020.\r\n          <br />\r\n          <b>SMIT: Social Media Investigation Tool</b>\r\n        </li>\r\n        <li>\r\n          Raspberry Pi Programming for Investigation, August 2019.\r\n          <br />\r\n          Practiced the IoT using Raspberry Pi for Investigation.\r\n        </li>\r\n\r\n        <li>\r\n          MODDANG: Boot Camp, Real-World Data Science Challenges, Thailand,\r\n          2018.\r\n          <br />\r\n          <b>\r\n            Trust checking Tool for loan approved from information on Social\r\n            Media.\r\n          </b>\r\n        </li>\r\n        <li>\r\n          Bridge 2 inventor challenge 10th For Sport, Thailand, 2017.\r\n          <br />\r\n          Practice using a microcontroller named \"NodeMCU” develop{\" \"}\r\n          <b>a cleaner controlled remotely by the smartphone with Blynk.</b>\r\n        </li>\r\n\r\n        <li>\r\n          i-Tim7th (i-Tim: Inventions Program 7th), 2015. <br />\r\n          Practiced the GoGo Board v5, its built Wi-Fi Car and show a data from\r\n          a sensor on web page with a graph via wireless.\r\n        </li>\r\n\r\n        <li>\r\n          i-Tim Robotics Camp 4th (robotics training), 2012. <br />\r\n          Practiced the Raspberry Pi with GoGo Board v3 (Pi Topping).\r\n        </li>\r\n      </ul>\r\n      <Header as=\"h4\" color=\"blue\">\r\n        Competition\r\n      </Header>\r\n      <ul>\r\n        <li>\r\n          The 2019 ICPC Asia Bangkok Programming Contest, at (ENG) Chulalongkorn\r\n          University.\r\n        </li>\r\n        <li>\r\n          The 2018 ICPC Asia Bangkok Programming Contest, at (ICT) Mahidol\r\n          University.\r\n        </li>\r\n        <li>\r\n          Thailand Student Arts and Crafts Competition, 2017.\r\n          <br />\r\n          <b>Line Follower & Obstacle Detector Robot</b> <br />\r\n          (1st of the northern region round and 9th of the final round)\r\n        </li>\r\n      </ul>\r\n    </Card.Content>\r\n  </Card>\r\n);\r\n\r\nexport default ActivitieCard;\r\n","import React from \"react\";\r\nimport { Card, Header, Image } from \"semantic-ui-react\";\r\n\r\nconst PublicationsCard = () => (\r\n  <Card fluid>\r\n    <Card.Content style={{ \"padding-top\": \"0px\", \"padding-bottom\": \"0px\" }}>\r\n      <Header as=\"h2\" color=\"blue\">\r\n        <Image\r\n          src=\"/images/icon/book.png\"\r\n          size=\"massive\"\r\n          verticalAlign=\"middle\"\r\n        />\r\n        Publications\r\n      </Header>\r\n    </Card.Content>\r\n    <Card.Content>\r\n      <Header as=\"h4\" color=\"blue\">\r\n        Conference papers\r\n      </Header>\r\n      <ul>\r\n        <li>\r\n          <b>A. Wongsorn</b>, K. Srijiranon, and N. Eiamkanitchat, “Application of IoT\r\n          Using Neuro-fuzzy Based on Thai Speech Classification to Control Model\r\n          Hospital Bed with Arduino,” in proceeding of 2019 IEEE 8th Global\r\n          Conference on Consumer Electronics (GCCE), Osaka, Japan, October 2019.\r\n        </li>\r\n      </ul>\r\n    </Card.Content>\r\n  </Card>\r\n);\r\n\r\nexport default PublicationsCard;\r\n","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Container,\r\n  Image,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Divider\r\n} from \"semantic-ui-react\";\r\nconst imgCenter = {\r\n  display: \"block\",\r\n  \"margin-left\": \"auto\",\r\n  \"margin-right\": \"auto\",\r\n  width: \"80%\"\r\n};\r\nconst Footer = () => (\r\n  <Segment\r\n    inverted\r\n    vertical\r\n    style={{ margin: \"1em 0em 0em\", padding: \"1em 0em\" }}\r\n  >\r\n    <Container textAlign=\"right\">Edited : 1/4/2020</Container>\r\n  </Segment>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Container, Segment, Grid } from \"semantic-ui-react\";\r\nimport ApsCard from \"./ApisithCard\";\r\nimport EduCard from \"./EducationCard\";\r\nimport ActivitieCard from \"./ActivitieCard\";\r\nimport PublicationsCard from \"./PublicationsCard.js\";\r\nimport Footer from \"./Footer\";\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Grid columns={2} stackable>\r\n          <Grid.Column width={6}>\r\n            <Segment basic>\r\n              <ApsCard />\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Segment basic>\r\n              <EduCard />\r\n              <ActivitieCard />\r\n\r\n              <PublicationsCard />\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}